generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id   String @id
  name String

  items CategoryItem[]
  steps Step[]

  @@map("category")
}

model CategoryItem {
  id          String  @id
  name        String
  description String
  icon        String?
  categoryId  String

  category Category @relation(fields: [categoryId], references: [id])
  tags     Tag[]

  @@map("category_item")
}

model Tag {
  id      String @id
  primary String
  aliases String @default("")

  items CategoryItem[]
  steps Step[]

  @@map("tag")
}

model Workflow {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  stages Stage[]
}

model Stage {
  id         Int    @id @default(autoincrement())
  name       String
  workflowId Int

  workflow Workflow @relation(fields: [workflowId], references: [id])
  steps    Step[]

  @@unique([name, workflowId])
  @@map("stage")
}

// Step is close to identical to CategoryItem, but I'm thinking of
// CategoryItems as templates for creating a step, basically.
model Step {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  icon        String?
  order       Int
  stageId     Int
  categoryId  String

  stage    Stage    @relation(fields: [stageId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
  tags     Tag[]

  // this assumes steps are never handled in tandem
  @@unique([stageId, order])
  @@map("step")
}
